{"version":3,"file":"static/js/887.9d689b0f.chunk.js","mappings":"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","sources":["components/common/Avatar/index.jsx","components/common/Like/index.jsx","components/common/ModalWindow/index.jsx","components/common/PostEditor/index.jsx","components/common/Post/index.jsx","components/common/PostsList/index.jsx","components/common/SubscriptionButton/index.jsx","components/pages/UserPage/index.jsx","components/ui/PostMenu/index.jsx","utils/formatDate.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Avatar = ({ url, size }) => {\r\n  return (\r\n    <div className={(size ? `w-[${size}px] h-[${size}px]` : \"w-10 h-10\") + \" rounded-full overflow-hidden\"}>\r\n      <img\r\n        className=\"w-full h-full\"\r\n        src={url}\r\n        alt=\"avatar\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nAvatar.defaultProps = {\r\n  url: \"https://i.pravatar.cc/100\"\r\n};\r\n\r\nAvatar.propTypes = {\r\n  url: PropTypes.string,\r\n  size: PropTypes.number\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst Like = () => {\r\n  return (\r\n    <button className=\"cursor-pointer hover:text-my-green-200 flex items-center justify-center hover:text-my-green-200\">\r\n      <Icon name=\"heart\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst ModalWindow = ({ children, handleClose }) => {\r\n  const background = useRef(null);\r\n  const handleClick = (e) => {\r\n    if (e.target === background.current) handleClose(false);\r\n  };\r\n  return (\r\n    <div\r\n      onClick={handleClick}\r\n      ref={background}\r\n      className=\"fixed top-0 left-0 bottom-0 right-0 w-screen h-screen z-[9999] bg-black/70 flex justify-center items-center\"\r\n    >\r\n      <div className=\"relative bg-white p-5 rounded-lg w-full max-w-screen-lg h-[700px]\">\r\n        <button\r\n          onClick={() => handleClose(false)}\r\n          className=\"absolute top-5 right-5 z-10\">\r\n          <Icon name=\"close\" className=\"w-7 h-7\" />\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModalWindow.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]).isRequired,\r\n  handleClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ModalWindow;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport postService from \"../../../services/post.service\";\r\nimport BigButton from \"../BigButton\";\r\nimport ModalWindow from \"../ModalWindow\";\r\n\r\nconst PostEditor = ({ postId, title, content, closeEditor, updatePost }) => {\r\n  const [post, setPost] = useState({\r\n    title,\r\n    content\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setPost(prevState => ({ ...prevState, [e.target.name]: e.target.value }));\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postService.edit({ ...post, postId })\r\n      .then(res => {\r\n        if (res.content.content === post.content) {\r\n          updatePost({ title: res.content.title, content: res.content.content });\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n  return (\r\n    <ModalWindow handleClose={closeEditor}>\r\n      <div className=\"flex flex-col h-full\">\r\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-3 justify-between h-full\">\r\n      <div className=\"flex flex-col gap-3\">\r\n        <label className=\"flex flex-col gap-2\">\r\n          <span>Заголовок поста</span>\r\n          <input\r\n            value={post.title}\r\n            onChange={handleChange}\r\n            name=\"title\"\r\n            type=\"text\"\r\n            placeholder=\"Заголовок поста\"\r\n            className=\"p-2 rounded shadow-inner border-black/20 border-[1px]\"\r\n          />\r\n        </label>\r\n        <label className=\"flex flex-col gap-2\">\r\n          <span>Текст поста</span>\r\n          <textarea\r\n            value={post.content}\r\n            onChange={handleChange}\r\n            name=\"content\"\r\n            placeholder=\"Текст поста\"\r\n            className=\"p-2 rounded shadow-inner border-black/20 border-[1px]\"\r\n            rows={8}\r\n          >{post.content}</textarea>\r\n        </label>\r\n      </div>\r\n      <div className=\"flex items-center justify-end gap-2\">\r\n        <div>\r\n          <BigButton\r\n            className={\"ml-auto \" + ((post.title === title && post.content === content) ? \"!bg-gray-400 !hover:bg-gray-400 !cursor-default\" : \"\")}\r\n          >Изменить</BigButton>\r\n        </div>\r\n        <div>\r\n          <BigButton\r\n            onClick={closeEditor}\r\n            className=\"ml-auto\"\r\n          >Отмена</BigButton>\r\n        </div>\r\n      </div>\r\n    </form>\r\n      </div>\r\n    </ModalWindow>\r\n  );\r\n};\r\n\r\nPostEditor.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  closeEditor: PropTypes.func.isRequired,\r\n  updatePost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostEditor;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport SubscriptionButton from \"../SubscriptionButton\";\r\nimport Icon from \"../Icon\";\r\nimport Like from \"../Like\";\r\nimport PostMenu from \"../../ui/PostMenu\";\r\n// import BigButton from \"../BigButton\";\r\n// import { EditorState, convertFromHTML, convertToRaw } from \"draft-js\";\r\n// import ContentState from \"draft-js/lib/ContentState\";\r\n// import draftToHtml from \"draftjs-to-html\";\r\n// import httpService from \"../../../services/http.service\";\r\nimport \"./Post.css\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport PostEditor from \"../PostEditor\";\r\n\r\nconst Post = ({ _id: id, created_at: createdAt, title, content, image, likes, comments, onDelete }) => {\r\n  const [onEditPost, setOnEditPost] = useState(false);\r\n  const [post, setPost] = useState({\r\n    id, createdAt, title, content, image, likes, comments\r\n  });\r\n  // const contentState = convertFromHTML(createContent());\r\n  // const defaultState = EditorState.createWithContent(\r\n  //   ContentState.createFromBlockArray(contentState)\r\n  // );\r\n  // const [editorState, setEditorState] = useState(defaultState);\r\n  // const { nickname } = user;\r\n  const homepage = process.env.PUBLIC_URL;\r\n  const handleOnEditPost = () => {\r\n    setOnEditPost(true);\r\n  };\r\n  // function createContent() {\r\n  //   let context = \"\";\r\n  //   if (title) context += `<h2><strong>${title}</strong></h2>`;\r\n  //   if (content) context += `<p>${content}</p>`;\r\n  //   return context;\r\n  // }\r\n  // const handleEditPost = () => {\r\n  //   const contentState = editorState.getCurrentContent();\r\n  //   const rawContentState = convertToRaw(contentState);\r\n  //   const newContent = draftToHtml(rawContentState).replace(\"\\n\", \"\").slice(0, -1);\r\n  //   httpService.put(\r\n  //     `http://localhost:5000/api/v1/post/${id}`,\r\n  //     {\r\n  //       newContent\r\n  //     }\r\n  //   )\r\n  //     .then(res => console.log(res))\r\n  //     .catch(error => console.log(error));\r\n  // };\r\n  const handleDeletePost = (postId) => {\r\n    onDelete(postId);\r\n  };\r\n  const handleEditPost = (newPost) => {\r\n    setOnEditPost(false);\r\n    setPost(prevState => ({ ...prevState, ...newPost }));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"p-6 bg-white rounded-xl flex flex-col gap-4 text-base\">\r\n        <div className=\"flex justify-between w-full\">\r\n          <div className=\"flex gap-3 items-center\">\r\n            <Link to={homepage} className=\"flex gap-3 items-center\">\r\n              <Avatar />\r\n              <span>{\"Nickname\"}</span>\r\n            </Link>\r\n            <Link to={`${homepage}/post/${post.id}`} className=\"text-sm text-gray-500\">{formatDate(createdAt)}</Link>\r\n          </div>\r\n          {onDelete\r\n            ? (\r\n              <div className=\"flex items-center\">\r\n                <PostMenu\r\n                  postId={post.id}\r\n                  list={\r\n                    [\r\n                      { text: \"Изменить\", action: handleOnEditPost },\r\n                      { text: \"Удалить\", action: () => handleDeletePost(post.id) }\r\n                    ]\r\n                  }\r\n                />\r\n              </div>\r\n              )\r\n            : (\r\n              <SubscriptionButton/>\r\n              )\r\n          }\r\n        </div>\r\n        {!!post.title && <h2 className=\"font-bold text-xl\">{post.title}</h2>}\r\n        {!!post.content && (\r\n          <div className=\"text-truncate\">\r\n            {post.content}\r\n          </div>\r\n        )}\r\n        <Link\r\n          to={`${homepage}/post/${post.id}`}\r\n          className=\"text-gray-500 cursor-pointer font-medium hover:text-my-green-200\"\r\n        >\r\n          Подробнее...\r\n        </Link>\r\n        {!!image && (\r\n          <div className=\"rounded-xl overflow-hidden\">\r\n            <img\r\n              className=\"m-0 w-full\"\r\n              src={`${homepage}/images/${image}`}\r\n              alt=\"Картинка\"\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"flex gap-3\">\r\n          <div className=\"flex gap-2\">\r\n            <Like/>\r\n            <span>{likes || \"0\"}</span>\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <div className=\"cursor-pointer hover:text-my-green-200 flex items-center justify-center\">\r\n              <Icon name=\"comment\" />\r\n            </div>\r\n            <span>{comments || \"0\"}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {onEditPost && (\r\n        <PostEditor\r\n          postId={post.id}\r\n          title={title}\r\n          content={content}\r\n          closeEditor={() => setOnEditPost(false)}\r\n          updatePost={handleEditPost}\r\n        />\r\n        /* <EditorPost editorState={editorState} setEditorState={setEditorState}/>\r\n         <div className=\"ml-9 mt-auto h-full flex items-end\">\r\n          <BigButton onClick={handleEditPost}>Изменить</BigButton>\r\n         </div> */\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  _id: PropTypes.string.isRequired,\r\n  created_at: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  likes: PropTypes.number,\r\n  comments: PropTypes.number,\r\n  user: PropTypes.shape({\r\n    nickname: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string\r\n  }),\r\n  content: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nexport default Post;\r\n","import React, { useState } from \"react\";\r\nimport Post from \"../Post\";\r\nimport PropTypes from \"prop-types\";\r\nimport postService from \"../../../services/post.service\";\r\n\r\nconst PostsList = ({ data, my }) => {\r\n  const [posts, setPosts] = useState(data);\r\n  const handleDeletePost = (postId) => {\r\n    postService.delete(postId)\r\n      .then(res => {\r\n        if (res.content) {\r\n          setPosts(prevState => ([...prevState].filter(item => item._id === postId)));\r\n        }\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n  return (\r\n    <ul className=\"flex flex-col gap-7\">\r\n      {posts.map(post => {\r\n        if (my) return <Post key={post._id} {...post} onDelete={handleDeletePost}/>;\r\n        return <Post key={post._id} {...post} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nPostsList.defaultProps = {\r\n  my: false\r\n};\r\n\r\nPostsList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  my: PropTypes.bool\r\n};\r\nexport default PostsList;\r\n","import React from \"react\";\r\n\r\nconst SubscriptionButton = () => {\r\n  return (\r\n    <button className=\"py-1 px-5 bg-my-green-200 text-white rounded-lg hover:bg-my-green-300 duration-200\">Подписаться</button>\r\n  );\r\n};\r\n\r\nexport default SubscriptionButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Loader from \"../../ui/Loader\";\r\nimport PostsList from \"../../common/PostsList\";\r\n\r\nconst UserPage = () => {\r\n  const [posts, setPosts] = useState(null);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setPosts([\r\n        {\r\n          id: 1,\r\n          date: \"11.05.2023\",\r\n          title: \"\",\r\n          description: \"Мы собрали для вас подборку свежих и актуальных книг, по всем языкам программирования.В подборке не просто новые книги для программистов, но и те книги, которые дают практическую основу с задачами и решениями для получения реального полезных навыков.\",\r\n          image: \"1.jpg\",\r\n          likes: 1245,\r\n          comments: 1138,\r\n          user: {\r\n            nickname: \"React\",\r\n            avatar: \"\"\r\n          }\r\n        },\r\n        {\r\n          id: 2,\r\n          date: \"03.12.2018\",\r\n          title: \"Как генерировать осмысленные коммиты. Применяем стандарт Conventional Commits\",\r\n          description: \"\",\r\n          image: \"\",\r\n          likes: 1245,\r\n          comments: 1138,\r\n          user: {\r\n            nickname: \"tashbenbetov\",\r\n            avatar: \"\"\r\n          }\r\n        },\r\n        {\r\n          id: 3,\r\n          date: \"10.07.2019\",\r\n          title: \"React Hook Router современная альтернатива React Router\",\r\n          description: \"\",\r\n          image: \"3.jpg\",\r\n          likes: 1245,\r\n          comments: 1138,\r\n          user: {\r\n            nickname: \"freislot\",\r\n            avatar: \"\"\r\n          }\r\n        }\r\n      ]);\r\n    }, 1000);\r\n  }, []);\r\n  if (!posts) return <Loader />;\r\n  return (\r\n    <div className=\"w-[695px] my-12\">\r\n      <PostsList data={posts} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState } from \"react\";\r\nimport Icon from \"../../common/Icon\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostMenu = ({ list }) => {\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const handleOpenMenu = () => {\r\n    setOpenMenu(prevState => !prevState);\r\n  };\r\n  const handleClick = (action) => {\r\n    setOpenMenu(false);\r\n    action();\r\n  };\r\n  return (\r\n    <div className=\"relative flex items-center\">\r\n      <button onClick={handleOpenMenu} className=\"inline\">\r\n        <Icon name=\"menu\" />\r\n      </button>\r\n      {openMenu && (\r\n        <ul className=\"absolute top-6 right-0 p-4 bg-white shadow-lg rounded-lg\">\r\n          {list.map((item, index) => {\r\n            if (typeof item.action === \"string\") {\r\n              return (\r\n                <li key={`action_${index}`}>\r\n                  <Link to={item.action}>{item.text}</Link>\r\n                </li>\r\n              );\r\n            } else {\r\n              return (\r\n                <li key={`action_${index}`}>\r\n                  <button onClick={() => handleClick(item.action)}>{item.text}</button>\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostMenu.defaultProps = {\r\n  list: []\r\n};\r\n\r\nPostMenu.propTypes = {\r\n  list: PropTypes.arrayOf(PropTypes.shape({\r\n    text: PropTypes.string.isRequired,\r\n    action: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func\r\n    ])\r\n  }))\r\n};\r\n\r\nexport default PostMenu;\r\n","const formatDate = (inputDate) => {\r\n  const date = new Date(inputDate);\r\n\r\n  const day = date.getDate().toString().padStart(2, \"0\");\r\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n  const year = date.getFullYear().toString();\r\n\r\n  return `${day}.${month}.${year}`;\r\n};\r\n\r\nexport default formatDate;\r\n"],"names":["Avatar","_ref","url","size","_jsx","className","concat","children","src","alt","defaultProps","Icon","name","handleClose","background","useRef","onClick","e","target","current","ref","_jsxs","postId","title","content","closeEditor","updatePost","_useState","useState","_useState2","_slicedToArray","post","setPost","handleChange","prevState","_objectSpread","_defineProperty","value","ModalWindow","onSubmit","preventDefault","postService","then","res","catch","error","console","onChange","type","placeholder","rows","BigButton","id","_id","createdAt","created_at","image","likes","comments","onDelete","onEditPost","setOnEditPost","_useState3","_useState4","_Fragment","Link","to","process","formatDate","PostMenu","list","text","action","SubscriptionButton","Like","PostEditor","newPost","PostsList","data","my","posts","setPosts","handleDeletePost","_toConsumableArray","filter","item","log","map","Post","useEffect","setTimeout","date","description","user","nickname","avatar","Loader","openMenu","setOpenMenu","index","inputDate","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear"],"sourceRoot":""}